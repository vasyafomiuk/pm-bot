[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pm-bot"
version = "1.0.0"
description = "AI-powered Slack bot for project management with Jira integration"
authors = [
    {name = "PM Bot Team", email = "team@pmbot.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["slack", "jira", "ai", "project-management", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Groupware",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "slack-bolt>=1.18.1",
    "openai[datalib]>=1.35.0",
    "azure-ai-inference>=1.0.0b4",
    "pyautogen>=0.2.18",
    "python-dotenv>=1.0.0",
    "pydantic>=2.7.4",
    "aiohttp>=3.8.6",
    "requests>=2.31.0",
    "mcp>=1.0.0",
    "httpx>=0.27.0",
    "google-api-python-client>=2.114.0",
    "google-auth-httplib2>=0.2.0",
    "google-auth-oauthlib>=1.2.0",
    "google-auth>=2.23.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.2",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.4.2",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx[test]>=0.27.0",
]

[project.urls]
Homepage = "https://github.com/your-org/pm-bot"
Documentation = "https://github.com/your-org/pm-bot#readme"
Repository = "https://github.com/your-org/pm-bot.git"
"Bug Tracker" = "https://github.com/your-org/pm-bot/issues"

[project.scripts]
pm-bot = "main:main"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 